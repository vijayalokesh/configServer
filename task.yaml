swagger: "2.0"

info:
  title: "Swagger - Tasker Service Project"
  description: "Tasker is a simple task-tracking web service.  This adds an ad server that serves up an advertisement with every task that is returned by Tasker.  A REST Tasker web service allowing CRUD and search operations with simple database backend. Documenting the REST API."
  version: "1.0.0"
host: "localhost:8080"

tags:
- name: "tasker"
  description: "Everything about Task"

schemes:
- "http"
paths:
  /tasks:
    post:
      tags:
      - "tasker"
      summary: "Add a new task"
      description: "Add a new task"
      operationId: "addTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Task object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Task"
        405:
          description: "Invalid input"
    get:
      tags:
      - "tasker"
      summary: "Get all the tasks"
      description: "Get all the tasks"
      operationId: "getAllTasks"
      produces:
      - "application/json"
      responses:
        200:
          description: "Get all the Task objects"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Task"
        405:
          description: "Tasks not found"
  /tasker/{id}:
    get:
      tags:
      - "tasker"
      summary: "Find task by ID"
      description: "Returns a single task"
      operationId: "getTaskById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of task to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Task"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Task not found"
    put:
      tags:
      - "tasker"
      summary: "Updates a task with form data"
      description: "Updates a task with form data"
      operationId: "updateTaskWithID"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of task that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Task object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    delete:
      tags:
      - "tasker"
      summary: "Deletes a task"
      description: "Deletes a task"
      operationId: "deleteTask"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Task id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Task not found"
  /tasker/category/{category}:
    get:
      tags:
      - "tasker"
      summary: "Find Tasks by category"
      description: "Category can be provided for searching."
      operationId: "findByCategory"
      produces:
      - "application/json"
      parameters:
      - name: "category"
        in: "path"
        description: "Category to filter by"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Task"
        400:
          description: "Invalid tag value"
definitions:
  Task:
    type: "object"
    required:
    - "taskDescription"
    - "createDate"
    - "dueDate"
    - "category"
    properties:
      taskId:
        type: "integer"
        format: "int64"
      taskDescription:
        type: "string"
        example: "Task 1"
      createDate:
        type: "string"
        example: "2019-12-27"
      dueDate:
        type: "string"
        example: "2019-12-28"
      category:
        type: "string"
        example: "Category1"
      advertisement:
        type: "string"
        example: "Advertisement"

